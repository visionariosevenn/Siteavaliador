from flask import Flask, render_template, request, redirect, url_for, session
import sqlite3

app = Flask(__name__)
app.secret_key = "chave_secreta"

# Banco de dados SQLite
def init_db():
    conn = sqlite3.connect("usuarios.db")
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS usuarios (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            nome TEXT UNIQUE NOT NULL,
            senha TEXT NOT NULL,
            saldo INTEGER DEFAULT 0
        )
    ''')
    conn.commit()
    conn.close()

init_db()

# Página inicial
@app.route("/")
def index():
    return render_template("index.html")

# Cadastro de usuários
@app.route("/cadastro", methods=["GET", "POST"])
def cadastro():
    if request.method == "POST":
        nome = request.form["nome"]
        senha = request.form["senha"]

        conn = sqlite3.connect("usuarios.db")
        cursor = conn.cursor()
        try:
            cursor.execute("INSERT INTO usuarios (nome, senha) VALUES (?, ?)", (nome, senha))
            conn.commit()
            return redirect(url_for("login"))
        except sqlite3.IntegrityError:
            return "Erro: Usuário já existe!"
        finally:
            conn.close()

    return render_template("cadastro.html")

# Login de usuários
@app.route("/login", methods=["GET", "POST"])
def login():
    if request.method == "POST":
        nome = request.form["nome"]
        senha = request.form["senha"]

        conn = sqlite3.connect("usuarios.db")
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM usuarios WHERE nome = ? AND senha = ?", (nome, senha))
        usuario = cursor.fetchone()
        conn.close()

        if usuario:
            session["usuario"] = usuario[1]
            return redirect(url_for("dashboard"))
        else:
            return "Usuário ou senha incorretos!"

    return render_template("login.html")

# Página do usuário
@app.route("/dashboard")
def dashboard():
    if "usuario" not in session:
        return redirect(url_for("login"))

    usuario = session["usuario"]
    return f"Bem-vindo, {usuario}! <br> <a href='/logout'>Sair</a>"

# Logout
@app.route("/logout")
def logout():
    session.pop("usuario", None)
    return redirect(url_for("index"))

if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=10000)
<!DOCTYPE html>
<html>
<head>
    <title>Spotify Opina Avaliador</title>
</head>
<body>
    <h1>Bem-vindo ao Spotify Opina Avaliador!</h1>
    <a href="/cadastro">Cadastro</a> | <a href="/login">Login</a>
</body>
</html>
<!DOCTYPE html>
<html>
<head>
    <title>Cadastro</title>
</head>
<body>
    <h1>Cadastro</h1>
    <form method="POST">
        Nome: <input type="text" name="nome" required><br>
        Senha: <input type="password" name="senha" required><br>
        <input type="submit" value="Cadastrar">
    </form>
    <a href="/">Voltar</a>
</body>
</html>
<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <h1>Login</h1>
    <form method="POST">
        Nome: <input type="text" name="nome" required><br>
        Senha: <input type="password" name="senha" required><br>
        <input type="submit" value="Entrar">
    </form>
    <a href="/">Voltar</a>
</body>
</html>
